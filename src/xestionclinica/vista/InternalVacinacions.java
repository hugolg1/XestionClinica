/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xestionclinica.vista;

import Utils.PoliticaFocus;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JOptionPane;
import xestionclinica.controlador.Coordinador;
import Utils.UtilsDate;
import xestionclinica.modelo.CanVo;
import xestionclinica.modelo.PropietarioVo;
import xestionclinica.modelo.VacinaVo;
import xestionclinica.modelo.VacinacionsVo;

/**
 *
 * @author hugolg
 */
public class InternalVacinacions extends javax.swing.JInternalFrame {

    private Coordinador coordinador;

    /**
     * Creates new form VistaVacinacions
     */
    public InternalVacinacions(Coordinador coordinador) {
        initComponents();
        this.coordinador = coordinador;
        setListeners();
        jcbPropietario.setModel(coordinador.getComboPropietarios());
        jcbCan.setModel(coordinador.getCansDoPropietario());
        jcbVacina.setModel(coordinador.getComboVacinas());
        tblVacinasAplicadas.setModel(coordinador.getModeloTblVacinasAplicadas());
        ajustesPrincipales();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlSuperior = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        lblPropietario = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        jcbPropietario = new javax.swing.JComboBox<>();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        lblCan = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        jcbCan = new javax.swing.JComboBox<>();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        lblTextChip = new javax.swing.JLabel();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        lblChip = new javax.swing.JLabel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0));
        pnlVacinas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVacinasAplicadas = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        pnlAplicarVacina = new javax.swing.JPanel();
        lblVacina = new javax.swing.JLabel();
        jcbVacina = new javax.swing.JComboBox<>();
        lblData = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        btnVacinar = new javax.swing.JButton();
        lblObservaciones = new javax.swing.JLabel();
        txtObservaciones = new javax.swing.JTextField();
        pnlInferior = new javax.swing.JPanel();
        btnPechar = new javax.swing.JButton();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        pnlSuperior.setMaximumSize(new java.awt.Dimension(65751, 40));
        pnlSuperior.setMinimumSize(new java.awt.Dimension(297, 40));
        pnlSuperior.setPreferredSize(new java.awt.Dimension(2451, 40));
        pnlSuperior.setLayout(new javax.swing.BoxLayout(pnlSuperior, javax.swing.BoxLayout.LINE_AXIS));
        pnlSuperior.add(filler2);

        lblPropietario.setText("Propietario");
        lblPropietario.setMaximumSize(new java.awt.Dimension(77, 30));
        lblPropietario.setMinimumSize(new java.awt.Dimension(77, 30));
        pnlSuperior.add(lblPropietario);
        pnlSuperior.add(filler1);

        jcbPropietario.setMaximumSize(new java.awt.Dimension(32767, 30));
        jcbPropietario.setMinimumSize(new java.awt.Dimension(40, 30));
        pnlSuperior.add(jcbPropietario);
        pnlSuperior.add(filler3);

        lblCan.setText("Can");
        lblCan.setMaximumSize(new java.awt.Dimension(27, 30));
        lblCan.setMinimumSize(new java.awt.Dimension(27, 30));
        pnlSuperior.add(lblCan);
        pnlSuperior.add(filler4);

        jcbCan.setMaximumSize(new java.awt.Dimension(32767, 30));
        jcbCan.setMinimumSize(new java.awt.Dimension(40, 30));
        pnlSuperior.add(jcbCan);
        pnlSuperior.add(filler5);

        lblTextChip.setText("CHIP");
        lblTextChip.setMaximumSize(new java.awt.Dimension(33, 30));
        lblTextChip.setMinimumSize(new java.awt.Dimension(33, 30));
        pnlSuperior.add(lblTextChip);
        pnlSuperior.add(filler7);

        lblChip.setText("2314234234");
        lblChip.setMaximumSize(new java.awt.Dimension(80, 30));
        lblChip.setMinimumSize(new java.awt.Dimension(80, 30));
        pnlSuperior.add(lblChip);
        pnlSuperior.add(filler6);

        getContentPane().add(pnlSuperior);

        pnlVacinas.setBorder(javax.swing.BorderFactory.createTitledBorder("Vacinas aplicadas"));
        pnlVacinas.setLayout(new java.awt.GridBagLayout());

        tblVacinasAplicadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblVacinasAplicadas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblVacinasAplicadas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlVacinas.add(jScrollPane1, gridBagConstraints);

        btnEliminar.setText("Eliminar");
        btnEliminar.setAlignmentY(0.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlVacinas.add(btnEliminar, gridBagConstraints);

        getContentPane().add(pnlVacinas);

        pnlAplicarVacina.setBorder(javax.swing.BorderFactory.createTitledBorder("Aplicar vacina"));
        pnlAplicarVacina.setLayout(new java.awt.GridBagLayout());

        lblVacina.setText("Vacina");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(lblVacina, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(jcbVacina, gridBagConstraints);

        lblData.setText("Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(lblData, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(txtData, gridBagConstraints);

        btnVacinar.setText("Vacinar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(btnVacinar, gridBagConstraints);

        lblObservaciones.setText("Observacións");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(lblObservaciones, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlAplicarVacina.add(txtObservaciones, gridBagConstraints);

        getContentPane().add(pnlAplicarVacina);

        pnlInferior.setPreferredSize(new java.awt.Dimension(809, 35));

        btnPechar.setText("Pechar");
        btnPechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecharActionPerformed(evt);
            }
        });
        pnlInferior.add(btnPechar);

        getContentPane().add(pnlInferior);

        setBounds(0, 0, 815, 435);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        coordinador.cerrarInternalVacinacions();
    }//GEN-LAST:event_formInternalFrameClosed

    private void btnPecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecharActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnPecharActionPerformed

    private void setListeners() {
        jcbPropietario.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    mostrarCanPropietario();
                }
            }
        });

        jcbCan.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {                
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    mostrarChipEVacinacions();
                    checkBtnEliminar();
                    checkBtnVacinar();
                }
            }
        });

        btnEliminar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                eliminarVacinaAplicada();
                checkBtnEliminar();
            }
        });

        btnVacinar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                aplicarVacina();
                checkBtnEliminar();
            }
        });
    }

    private void checkBtnEliminar() {
        if (jcbCan.getSelectedIndex() != -1 && tblVacinasAplicadas.getModel().getRowCount() > 0) {
            btnEliminar.setEnabled(true);
        } else {
            btnEliminar.setEnabled(false);
        }
    }

    private void checkBtnVacinar() {
        if (jcbCan.getSelectedIndex() != -1) {
            btnVacinar.setEnabled(true);
        } else {
            btnVacinar.setEnabled(false);
        }
    }

    private void ajustesPrincipales() {
        lblChip.setText("");
        btnEliminar.setEnabled(false);
        btnVacinar.setEnabled(false);
        if (jcbPropietario.getSelectedIndex() != -1) {
            mostrarCanPropietario();
            mostrarChipEVacinacions();
        }
        establecerPoliticaFocus();
    }
    
    private void establecerPoliticaFocus(){
        PoliticaFocus pFocus = new PoliticaFocus();
        pFocus.añadirComponent(jcbPropietario);
        pFocus.añadirComponent(jcbCan);
        pFocus.añadirComponent(jcbVacina);
        pFocus.añadirComponent(txtData);
        pFocus.añadirComponent(txtObservaciones);
        pFocus.añadirComponent(btnVacinar);
        this.setFocusTraversalPolicy(pFocus);
    }

    private void mostrarCanPropietario() {
        String dniProp = jcbPropietario.getModel().getElementAt(jcbPropietario.getSelectedIndex()).getDni();
        coordinador.mostrarCansPropietario(dniProp);
    }

    private void mostrarChipEVacinacions() {
        if (jcbCan.getSelectedIndex() != -1) {
            lblChip.setText(jcbCan.getModel().getElementAt(jcbCan.getSelectedIndex()).getChip());
            coordinador.mostrarVacinacionsCan(lblChip.getText());
        } else {
            lblChip.setText("");
        }
    }

    private void eliminarVacinaAplicada() {
        if (tblVacinasAplicadas.getSelectedRow() != -1 && jcbCan.getSelectedIndex() != -1) {
            String chipCan = jcbCan.getModel().getElementAt(jcbCan.getSelectedIndex()).getChip();
            coordinador.eliminarVacinaAplicada(this, tblVacinasAplicadas.getSelectedRow(), chipCan);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona unha vacina na taboa para eliminala");
        }
    }

    private void aplicarVacina() {
        //TODO completar
        coordinador.aplicarVacinacion(this, getVacinaParaAplicar(), lblChip.getText());
    }

    private VacinacionsVo getVacinaParaAplicar() {
        VacinacionsVo vacinacion = new VacinacionsVo();
        if (jcbVacina.getSelectedIndex() != -1) {
            vacinacion.setVacina(jcbVacina.getModel().getElementAt(jcbVacina.getSelectedIndex()));
        } else {
            vacinacion.setVacina(null);
        }
        vacinacion.setData(UtilsDate.transformStringToDate(txtData.getText().trim()));
        vacinacion.setObservacion(txtObservaciones.getText().trim());
        return vacinacion;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnPechar;
    private javax.swing.JButton btnVacinar;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<CanVo> jcbCan;
    private javax.swing.JComboBox<PropietarioVo> jcbPropietario;
    private javax.swing.JComboBox<VacinaVo> jcbVacina;
    private javax.swing.JLabel lblCan;
    private javax.swing.JLabel lblChip;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblObservaciones;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JLabel lblTextChip;
    private javax.swing.JLabel lblVacina;
    private javax.swing.JPanel pnlAplicarVacina;
    private javax.swing.JPanel pnlInferior;
    private javax.swing.JPanel pnlSuperior;
    private javax.swing.JPanel pnlVacinas;
    private javax.swing.JTable tblVacinasAplicadas;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtObservaciones;
    // End of variables declaration//GEN-END:variables

}
